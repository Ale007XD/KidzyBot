# .github/workflows/deploy.yml
name: Deploy Telegram Bot

on:
  push:
    branches: [ "main" ] # Запускать workflow при пуше в ветку main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production # Убедитесь, что среда 'production' создана в настройках репозитория
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Registry (if needed)
      # Если вы пушите образ в реестр, добавьте шаг логина здесь
      # uses: docker/login-action@v3
      # with:
      #   username: ${{ secrets.DOCKER_USERNAME }}
      #   password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t crm-telegram-bot .

    - name: Stop and remove old container (if exists)
      run: |
        docker stop crm_bot_container || true
        docker rm crm_bot_container || true

    - name: Run Docker container with secrets
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
        # Если будете использовать другую БД, добавьте DB_PASSWORD и т.д.
      run: |
        # Запускаем новый контейнер с секретами и volume
        docker run -d \
          --name crm_bot_container \
          --env TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN \
          --env GOOGLE_GEMINI_API_KEY=$GOOGLE_GEMINI_API_KEY \
          --env DB_PATH=data/crm_bot.db \
          -v $(pwd)//app/data \
          crm-telegram-bot
