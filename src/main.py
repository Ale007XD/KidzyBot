import logging
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    CallbackQueryHandler,
    filters
)
from config import TELEGRAM_BOT_TOKEN
from database import init_db
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
import handlers.common_handlers as common_handlers
import handlers.child_handlers as child_handlers
import handlers.parent_handlers as parent_handlers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    init_db()

    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Application
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    # --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ---

    # –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    role_conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", common_handlers.start)],
        states={
            common_handlers.SELECTING_ROLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, common_handlers.select_role)]
        },
        fallbacks=[CommandHandler("cancel", common_handlers.cancel)],
    )
    application.add_handler(role_conv_handler)

    # ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á —Ä–µ–±—ë–Ω–∫–æ–º
    add_task_conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^üìù –î–æ–±–∞–≤–∏—Ç—å –¥–µ–ª–æ$"), child_handlers.add_task)],
        states={
            child_handlers.ADDING_TASK: [MessageHandler(filters.TEXT & ~filters.COMMAND, child_handlers.save_task)]
        },
        fallbacks=[CommandHandler("cancel", common_handlers.cancel)], # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–π cancel
    )
    application.add_handler(add_task_conv_handler)

    # ConversationHandler –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–µ–±—ë–Ω–∫–æ–º
    track_mood_conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^üåà –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–Ω—è$"), child_handlers.track_mood)],
        states={
            child_handlers.TRACKING_MOOD: [CallbackQueryHandler(child_handlers.save_mood)]
        },
        fallbacks=[CommandHandler("cancel", common_handlers.cancel)],
    )
    application.add_handler(track_mood_conv_handler)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞ (—Ä–µ–∞–≥–∏—Ä—É—é—Ç –Ω–∞ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫)
    # TODO: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ –ø–∏—à–µ—Ç –∏–º–µ–Ω–Ω–æ —Ä–µ–±–µ–Ω–æ–∫
    # application.add_handler(MessageHandler(filters.Regex("^üìù –î–æ–±–∞–≤–∏—Ç—å –¥–µ–ª–æ$"), child_handlers.add_task)) # –£–∂–µ –≤ ConversationHandler
    application.add_handler(MessageHandler(filters.Regex("^‚úÖ –ú–æ–∏ –¥–µ–ª–∞$"), child_handlers.show_tasks))
    # application.add_handler(MessageHandler(filters.Regex("^üåà –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–Ω—è$"), child_handlers.track_mood)) # –£–∂–µ –≤ ConversationHandler
    application.add_handler(MessageHandler(filters.Regex("^üèÜ –ú–æ–∏ –Ω–∞–≥—Ä–∞–¥—ã$"), child_handlers.show_rewards))
    application.add_handler(MessageHandler(filters.Regex("^üí° AI-–ø–æ–¥—Å–∫–∞–∑–∫–∞$"), child_handlers.get_ai_tip))
    application.add_handler(MessageHandler(filters.Regex("^üéÆ –ß–µ–ª–ª–µ–Ω–¥–∂ –¥–Ω—è$"), child_handlers.get_daily_challenge))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è (—Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ callback –æ—Ç inline-–∫–Ω–æ–ø–æ–∫)
    # TODO: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ –Ω–∞–∂–∏–º–∞–µ—Ç –∏–º–µ–Ω–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—å
    application.add_handler(CallbackQueryHandler(parent_handlers.parent_callback_handler))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
