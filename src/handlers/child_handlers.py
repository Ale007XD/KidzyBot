from telegram import Update
from telegram.ext import ContextTypes
from ai_module import ai_helper

async def add_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å? –ù–∞–ø–∏—à–∏ –º–Ω–µ.")

async def show_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–æ—Ç —Ç–≤–æ–∏ –¥–µ–ª–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n- –ü–æ—á–∏—Å—Ç–∏—Ç—å –∑—É–±—ã üîÅ\n- –°–¥–µ–ª–∞—Ç—å —É—Ä–æ–∫–∏")

async def track_mood(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–∞–∫ —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è? –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ!")

async def show_rewards(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–£ —Ç–µ–±—è 150 XP! –¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: 2. \n–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã: ...")

async def get_ai_tip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if ai_helper:
        tip = ai_helper.get_idea_for_child("—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ")
        await update.message.reply_text(f"üí° –ò–¥–µ—è –¥–Ω—è: {tip}")
    else:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏, –º–æ–π AI-–ø–æ–º–æ—â–Ω–∏–∫ —Å–µ–π—á–∞—Å –æ—Ç–¥—ã—Ö–∞–µ—Ç.")
